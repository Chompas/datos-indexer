/*
 * DirectoryReader.cpp
 *
 *  Created on: 12/04/2013
 *      Author: lara
 */

#include "DirectoryReader.h"
#include <string.h>


DirectoryReader* DirectoryReader::instance = 0;

DirectoryReader::DirectoryReader() {

}

DirectoryReader* DirectoryReader::getInstance() {
	if (instance == 0) {
		instance = new DirectoryReader();
	}
	return instance;
}

/*
 * Recorre el archivo y lo va separando en tokens cada linea
 */
void readFile(const char* path) {
	string s;
	ifstream fin;
	fin.open(path);
	while (!fin.eof()) {

		getline(fin, s);
		char* aux = strtok((char*)s.c_str()," ,.;~");
		while(aux != NULL) {
			cout << aux << endl;
			aux = strtok(NULL," ,.;~");
		}
	}
	fin.close();
}

void DirectoryReader::recorrerDirectorio(string dir) {
	ifstream fin;
	string filepath;
	DIR *dp;
	struct dirent *dirp;
	struct stat filestat;

	dp = opendir(dir.c_str());

	if (dp == NULL) {
		cout << "Directorio invÃ¡lido" << endl;
		return;
	}

	while ((dirp = readdir(dp))) {
		filepath = dir + "/" + dirp->d_name;

		// Saltea subdirectorios
		if (stat(filepath.c_str(), &filestat)) {
			continue;
		}
		if (S_ISDIR(filestat.st_mode)) {
			continue;
		}

		cout << "Procesando " + filepath << endl;
		readFile(filepath.c_str());
	}

	closedir(dp);
}

